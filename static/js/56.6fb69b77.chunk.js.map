{"version":3,"file":"static/js/56.6fb69b77.chunk.js","mappings":"uMAAaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,OACE,0BACE,kBACEC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,EACXK,YAAY,iGAInB,E,oCCiCD,EArCkB,WAAO,IAAD,EAEhBC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,IAElDC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAeC,KAAKR,EACrB,GAAE,IAEH,IAKMS,GAAmBC,EAAAA,EAAAA,UAAQ,WAC/B,OAAOX,EAAUY,QAAO,SAAAC,GAAQ,OAC9BA,EAASC,KAAKC,cAAcC,SAASX,EAAYU,cADnB,GAGjC,GAAE,CAACf,EAAWK,IAEf,OACE,6BACE,SAACf,EAAD,CAAWC,MAAOc,EAAab,SAbd,SAAAD,GACnBa,EAA0B,KAAVb,EAAe,CAAEqB,OAAQrB,GAAU,CAAC,EACrD,IAYIS,EAAUiB,OAAS,IAClB,wBACGP,EAAiBQ,KAAI,SAAAL,GAAQ,OAC5B,yBACI,SAAC,KAAD,CAAMM,GAAE,UAAKN,EAASO,IAAMC,MAAO,CAAEC,KAAMzB,GAA3C,SAAwDgB,EAASC,QAD5DD,EAASO,GADU,QAQvC,C","sources":["components/SearchBox.jsx","pages/Customers.jsx"],"sourcesContent":["export const SearchBox = ({ value, onChange }) => {\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n        placeholder=\"Введите название\"\n      />\n    </div>\n  );\n};\n","import { SearchBox } from 'components/SearchBox';\nimport { getCustomers } from 'fakeApi';\nimport { useEffect, useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nconst Customers = () => {\n\n  const location = useLocation();\n  const [customers, setCustomers] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filterParam = searchParams.get('filter') ?? '';\n\n  useEffect(() => {\n    getCustomers().then(setCustomers);\n  }, []);\n\n  const changeFilter = value => {\n    setSearchParams(value !== '' ? { filter: value } : {});\n  };\n\n\n  const visibleCustomers = useMemo(() => {\n    return customers.filter(customer =>\n      customer.name.toLowerCase().includes(filterParam.toLowerCase())\n    );\n  }, [customers, filterParam]);\n\n  return (\n    <main>\n      <SearchBox value={filterParam} onChange={changeFilter} />\n      {customers.length > 0 && (\n        <ul>\n          {visibleCustomers.map(customer => (\n            <li key={customer.id}>\n                <Link to={`${customer.id}`} state={{ from: location}} >{customer.name}</Link></li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n};\n\nexport default Customers;\n"],"names":["SearchBox","value","onChange","type","e","target","placeholder","location","useLocation","useState","customers","setCustomers","useSearchParams","searchParams","setSearchParams","filterParam","get","useEffect","getCustomers","then","visibleCustomers","useMemo","filter","customer","name","toLowerCase","includes","length","map","to","id","state","from"],"sourceRoot":""}